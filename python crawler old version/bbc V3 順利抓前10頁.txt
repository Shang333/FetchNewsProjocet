from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.by import By
from webdriver_manager.chrome import ChromeDriverManager
import time
import pandas as pd

def fetch_all_pages(search_query, max_pages=10):
    service = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=service)
    url = f"https://www.bbc.com/search?q={search_query}&filter=news"
    driver.get(url)

    # 等待頁面加載
    time.sleep(5)

    news_list = []
    page_count = 1  # 初始化頁面計數器

    while page_count <= max_pages:
        # 抓取當前頁面的新聞
        articles = driver.find_elements(By.CSS_SELECTOR, "div[data-testid='liverpool-card']")
        for article in articles:
            title = article.find_element(By.CSS_SELECTOR, 'h2').text if article.find_elements(By.CSS_SELECTOR, 'h2') else 'No title found'
            link = 'https://www.bbc.com' + article.find_element(By.CSS_SELECTOR, 'a').get_attribute('href') if article.find_elements(By.CSS_SELECTOR, 'a') else 'No link found'
            summary = article.find_element(By.CSS_SELECTOR, 'p').text if article.find_elements(By.CSS_SELECTOR, 'p') else 'No summary found'
            date = article.find_element(By.CSS_SELECTOR, "span[data-testid='card-metadata-lastupdated']").text if article.find_elements(By.CSS_SELECTOR, "span[data-testid='card-metadata-lastupdated']") else 'No date found'
            
            news_list.append({
                'date': date,
                'title': title,
                'summary': summary,
                'link': link
            })

        if page_count < max_pages:
            try:
                next_page = driver.find_element(By.CSS_SELECTOR, "button[data-testid='pagination-next-button']")
                next_page.click()
                time.sleep(10)  # 等待新頁面加載
                page_count += 1  # 更新頁面計數
            except:
                print("No more pages or next page button not found.")
                break
        else:
            print("Reached page limit of", max_pages)
            break

    driver.quit()
    return news_list

def save_to_csv(news_data, filename='news.csv'):
    df = pd.DataFrame(news_data)
    df.to_csv(filename, index=False)
    print(f'Data saved to {filename}')

# 使用示例
news_data = fetch_all_pages('Carbon credit', max_pages=10)
save_to_csv(news_data)
